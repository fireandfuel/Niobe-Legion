/*
 * Niobe Legion - a versatile client / server framework
 *     Copyright (C) 2013-2016 by fireandfuel (fireandfuel<at>hotmail<dot>de)
 *
 * This file (build.gradle) is part of Niobe Legion (module niobe-legion-shared).
 *
 *     Niobe Legion is free software: you can redistribute it and/or modify
 *     it under the terms of the GNU Lesser General Public License as published by
 *     the Free Software Foundation, either version 3 of the License, or
 *     (at your option) any later version.
 *
 *     Niobe Legion is distributed in the hope that it will be useful,
 *     but WITHOUT ANY WARRANTY; without even the implied warranty of
 *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *     GNU Lesser General Public License for more details.
 *
 *     You should have received a copy of the GNU Lesser General Public License
 *     along with Niobe Legion.  If not, see <http://www.gnu.org/licenses/>.
 */

description = 'Niobe Legion Shared'

// url = "https://github.com/fireandfuel/Niobe-Legion"

//licenses {
//    license {
//        name = "GNU General Public License (GPL), Version 3"
//        url = "http://www.gnu.org/licenses/gpl"
//    }
//}

//developers{
//    developer {
//        id = "Nicolai J. (fireandfuel)"
//        email = "fireandfuel@hotmail.de"
//    }
//}

dependencies {
    compile group: 'org.bouncycastle', name: 'bcprov-jdk15on', version: '1.53'
    compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.4.1'
    compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.4.1'
    compile group: 'org.hibernate.javax.persistence', name: 'hibernate-jpa-2.1-api', version: '1.0.0.Final'
    compile group: 'org.tukaani', name: 'xz', version: '1.5'
    runtime group: 'com.github.marschall', name: 'threeten-jpa', version: '1.1.0'
    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile group: 'org.mockito', name: 'mockito-core', version: '1.10.19'
}

sourceSets {
    main {
        java {
            srcDir 'src'
        }
        resources {
            srcDir 'resources'
        }
    }
    test {
        java {
            srcDir 'src'
            srcDir 'test'
        }
        resources {
            srcDir 'resources'
        }
    }
}

jar {
    manifest {
        attributes 'Class-Path': configurations.runtime.files.collect { "lib/$it.name" }.join(' ')
    }
}

task copyDependencies(type: Copy) {
    from configurations.compile
    into file("$rootDir/package/$project.name/lib")
}

jar.dependsOn(tasks.getByName("copyDependencies"))