### legion server config
### please use UTF-8 as file encoding!

### port where the server listens to new connections (default 5242)
port = 5242

### maximum client connections, minimum is 10 connections
### 0 -> unlimited, WARNING: It can trigger a Denial of Service - only use when you know what you do!
max_connections = 1

### if you want to use TLS connection, you need a JKS keystore with a valid certificate
### the value for keystore_file can be either a absolute or relative path
### default keystore_file name is server.ks
### otherwise comment the following out: 
keystore_file = server.ks
keystore_password = legion

### if you want to specify available cipher suites for the TLS connection, use cipher_suites
### a cipher suite is named like TLS_[KEY_EXCHANGE]_WITH_[ENCRYPTION]_[HASH FUNCTION]
### cipher suites are separated with a space
###
### default: TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256
###
###  see docs.oracle.com/javase/8/docs/technotes/guides/security/SunProviders.html#SunJSSEProvider for
###  available cipher suites for Java 8
# cipher_suites =

### user's database - supports "mariadb" (mysql compatible - default), "h2-embedded" (h2 db with local database) and
### h2-server (h2 db in server mode)
database_type = h2-embedded

### encrypt the user's database with a password (AES/CBC/PKCS5Padding, leave blank for no encryption)
# encryption_key=

### uncomment the following lines if you want to use a mysql/mariadb (default port 3306) to store informations
# sql_host = localhost
# sql_port = 3306
# sql_user = niobe
# sql_password = legion2014
# sql_database = niobe
# sql_max_connections = 5

### uncomment the following line if you want to use the embedded databases to store informations
### default sql_database_file name is server
sql_database_file = server

### authenfication mechanisms which are supported by server, separated with space
### for example: SCRAM-SHA-1 DIGEST-MD5 PLAIN ANONYMOUS
### default is PLAIN
auth_mechanisms = SCRAM-SHA-1 DIGEST-MD5 PLAIN ANONYMOUS

### config file to use for log4j logging, if not set the build-in config will be used
### can be a xml, json or yaml file, see http://logging.apache.org/log4j/2.x/manual/configuration.htmllog_config_file=logger.xml
#log_config_file=logger.xml

### module path
module_path = modules